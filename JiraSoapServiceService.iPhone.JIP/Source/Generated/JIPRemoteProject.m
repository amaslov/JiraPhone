/*
	JIPRemoteProject.h
	The implementation of properties and methods for the JIPRemoteProject object.
	Generated by SudzC.com
*/
#import "JIPRemoteProject.h"

#import "JIPRemoteScheme.h"
#import "JIPRemoteScheme.h"
#import "JIPRemotePermissionScheme.h"
@implementation JIPRemoteProject
	@synthesize description = _description;
	@synthesize issueSecurityScheme = _issueSecurityScheme;
	@synthesize key = _key;
	@synthesize lead = _lead;
	@synthesize notificationScheme = _notificationScheme;
	@synthesize permissionScheme = _permissionScheme;
	@synthesize projectUrl = _projectUrl;
	@synthesize url = _url;

	- (id) init
	{
		if(self = [super init])
		{
			self.description = nil;
			self.issueSecurityScheme = nil; // [[JIPRemoteScheme alloc] init];
			self.key = nil;
			self.lead = nil;
			self.notificationScheme = nil; // [[JIPRemoteScheme alloc] init];
			self.permissionScheme = nil; // [[JIPRemotePermissionScheme alloc] init];
			self.projectUrl = nil;
			self.url = nil;

		}
		return self;
	}

	+ (JIPRemoteProject*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (JIPRemoteProject*)[[[JIPRemoteProject alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.description = [Soap getNodeValue: node withName: @"description"];
			self.issueSecurityScheme = [[JIPRemoteScheme newWithNode: [Soap getNode: node withName: @"issueSecurityScheme"]] object];
			self.key = [Soap getNodeValue: node withName: @"key"];
			self.lead = [Soap getNodeValue: node withName: @"lead"];
			self.notificationScheme = [[JIPRemoteScheme newWithNode: [Soap getNode: node withName: @"notificationScheme"]] object];
			self.permissionScheme = [[JIPRemotePermissionScheme newWithNode: [Soap getNode: node withName: @"permissionScheme"]] object];
			self.projectUrl = [Soap getNodeValue: node withName: @"projectUrl"];
			self.url = [Soap getNodeValue: node withName: @"url"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"RemoteProject"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [[NSMutableString alloc] init];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return [s autorelease];
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.description != nil) [s appendFormat: @"<description>%@</description>", [[self.description stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.issueSecurityScheme != nil) [s appendString: [self.issueSecurityScheme serialize: @"issueSecurityScheme"]];
		if (self.key != nil) [s appendFormat: @"<key>%@</key>", [[self.key stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.lead != nil) [s appendFormat: @"<lead>%@</lead>", [[self.lead stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.notificationScheme != nil) [s appendString: [self.notificationScheme serialize: @"notificationScheme"]];
		if (self.permissionScheme != nil) [s appendString: [self.permissionScheme serialize: @"permissionScheme"]];
		if (self.projectUrl != nil) [s appendFormat: @"<projectUrl>%@</projectUrl>", [[self.projectUrl stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.url != nil) [s appendFormat: @"<url>%@</url>", [[self.url stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[JIPRemoteProject class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.description != nil) { [self.description release]; }
		if(self.issueSecurityScheme != nil) { [self.issueSecurityScheme release]; }
		if(self.key != nil) { [self.key release]; }
		if(self.lead != nil) { [self.lead release]; }
		if(self.notificationScheme != nil) { [self.notificationScheme release]; }
		if(self.permissionScheme != nil) { [self.permissionScheme release]; }
		if(self.projectUrl != nil) { [self.projectUrl release]; }
		if(self.url != nil) { [self.url release]; }
		[super dealloc];
	}

@end
