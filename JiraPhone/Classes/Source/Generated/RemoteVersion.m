/*
	RemoteVersion.h
	The implementation of properties and methods for the RemoteVersion object.
	Generated by SudzC.com
*/
#import "RemoteVersion.h"

@implementation RemoteVersion
	@synthesize archived = _archived;
	@synthesize releaseDate = _releaseDate;
	@synthesize released = _released;
	@synthesize sequence = _sequence;

	- (id) init
	{
		if(self = [super init])
		{
			self.releaseDate = nil;

		}
		return self;
	}

	+ (RemoteVersion*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (RemoteVersion*)[[[RemoteVersion alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.archived = [[Soap getNodeValue: node withName: @"archived"] boolValue];
			self.releaseDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"releaseDate"]];
			self.released = [[Soap getNodeValue: node withName: @"released"] boolValue];
			self.sequence = [[Soap getNodeValue: node withName: @"sequence"] longLongValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"RemoteVersion"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [[NSMutableString alloc] init];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return [s autorelease];
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<archived>%@</archived>", (self.archived)?@"true":@"false"];
		if (self.releaseDate != nil) [s appendFormat: @"<releaseDate>%@</releaseDate>", [Soap getDateString: self.releaseDate]];
		[s appendFormat: @"<released>%@</released>", (self.released)?@"true":@"false"];
		[s appendFormat: @"<sequence>%@</sequence>", [NSString stringWithFormat: @"%ld", self.sequence]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[RemoteVersion class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.releaseDate != nil) { [self.releaseDate release]; }
		[super dealloc];
	}

@end
