/*
	JiraSoapServiceService.m
	The implementation classes and methods for the JiraSoapServiceService web service.
	Generated by SudzC.com
*/

#import "JiraSoapServiceService.h"
				
#import "Soap.h"
	
#import "RemoteEntity.h"
#import "RemoteComponent.h"
#import "RemoteNamedObject.h"
#import "RemoteResolution.h"
#import "RemoteStatus.h"
#import "RemoteField.h"
#import "RemoteException.h"
#import "RemotePermissionException.h"
#import "RemoteAuthenticationException.h"
#import "RemoteValidationException.h"
#import "ArrayOf_tns1_RemoteUser.h"
#import "ArrayOf_tns1_RemoteVersion.h"
#import "ArrayOf_xsd_string.h"
#import "ArrayOf_tns1_RemoteComponent.h"
#import "ArrayOf_tns1_RemoteCustomFieldValue.h"
#import "ArrayOf_tns1_RemoteFieldValue.h"
#import "ArrayOf_tns1_RemoteNamedObject.h"
#import "ArrayOf_tns1_RemoteIssueType.h"
#import "ArrayOf_tns1_RemoteEntity.h"
#import "ArrayOf_tns1_RemotePermissionMapping.h"
#import "ArrayOf_tns1_RemotePriority.h"
#import "ArrayOf_tns1_RemoteResolution.h"
#import "ArrayOf_tns1_RemoteStatus.h"
#import "ArrayOf_tns1_RemoteProjectRole.h"
#import "ArrayOf_tns1_RemoteRoleActor.h"
#import "ArrayOf_tns1_RemoteScheme.h"
#import "ArrayOf_tns1_RemoteField.h"
#import "ArrayOf_tns1_RemoteComment.h"
#import "ArrayOf_tns1_RemoteFilter.h"
#import "ArrayOf_tns1_RemoteSecurityLevel.h"
#import "ArrayOf_tns1_RemoteAvatar.h"
#import "ArrayOf_tns1_RemotePermissionScheme.h"
#import "ArrayOf_tns1_RemotePermission.h"
#import "ArrayOf_xsd_base64Binary.h"
#import "ArrayOf_tns1_RemoteAttachment.h"
#import "ArrayOf_tns1_RemoteWorklog.h"
#import "ArrayOf_tns1_RemoteIssue.h"
#import "ArrayOf_tns1_RemoteProject.h"
#import "AbstractRemoteEntity.h"
#import "AbstractNamedRemoteEntity.h"
#import "RemoteIssueType.h"
#import "RemotePermissionScheme.h"
#import "RemotePriority.h"
#import "RemoteProjectRoleActors.h"
#import "RemoteSecurityLevel.h"
#import "RemoteConfiguration.h"
#import "RemoteWorklog.h"
#import "RemoteGroup.h"
#import "RemoteTimeInfo.h"
#import "RemoteFieldValue.h"
#import "AbstractRemoteConstant.h"
#import "RemotePermission.h"
#import "RemotePermissionMapping.h"
#import "RemoteIssue.h"
#import "RemoteUser.h"
#import "RemoteCustomFieldValue.h"
#import "RemoteProjectRole.h"
#import "RemoteRoleActors.h"
#import "RemoteVersion.h"
#import "RemoteScheme.h"
#import "RemoteFilter.h"
#import "RemoteRoleActor.h"
#import "RemoteAttachment.h"
#import "RemoteServerInfo.h"
#import "RemoteAvatar.h"
#import "RemoteComment.h"
#import "RemoteProject.h"

/* Implementation of the service */
				
@implementation JiraSoapServiceService

	- (id) init
	{
		if(self = [super init])
		{
			self.serviceUrl = @"jira.atlassian.com/rpc/soap/jirasoapservice-v2";
			self.namespace = @"jira.atlassian.com/rpc/soap/jirasoapservice-v2";
			self.headers = nil;
			self.logging = NO;
		}
		return self;
	}
	
	- (id) initWithUsername: (NSString*) username andPassword: (NSString*) password {
		if(self = [super initWithUsername:username andPassword:password]) {
		}
		return self;
	}
	
	+ (JiraSoapServiceService*) service {
		return [JiraSoapServiceService serviceWithUsername:nil andPassword:nil];
	}
	
	+ (JiraSoapServiceService*) serviceWithUsername: (NSString*) username andPassword: (NSString*) password {
		return [[[JiraSoapServiceService alloc] initWithUsername:username andPassword:password] autorelease];
	}

		
	/* Returns RemoteComment*.  */
	- (SoapRequest*) getComment: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (long) in1
	{
		return [self getComment: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getComment: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (long) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithLong: in1] forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getComment" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteComment alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns RemoteGroup*.  */
	- (SoapRequest*) createGroup: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (RemoteUser*) in2
	{
		return [self createGroup: handler action: nil in0: in0 in1: in1 in2: in2];
	}

	- (SoapRequest*) createGroup: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (RemoteUser*) in2
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"createGroup" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteGroup alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns RemoteServerInfo*.  */
	- (SoapRequest*) getServerInfo: (id <SoapDelegate>) handler in0: (NSString*) in0
	{
		return [self getServerInfo: handler action: nil in0: in0];
	}

	- (SoapRequest*) getServerInfo: (id) _target action: (SEL) _action in0: (NSString*) in0
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getServerInfo" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteServerInfo alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns RemoteGroup*.  */
	- (SoapRequest*) getGroup: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self getGroup: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getGroup: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getGroup" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteGroup alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) login: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self login: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) login: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"login" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns RemoteUser*.  */
	- (SoapRequest*) getUser: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self getUser: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getUser: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getUser" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteUser alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns RemoteIssue*.  */
	- (SoapRequest*) getIssue: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self getIssue: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getIssue: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getIssue" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteIssue alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteVersion*.  */
	- (SoapRequest*) getVersions: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self getVersions: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getVersions: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getVersions" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteVersion alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteComponent*.  */
	- (SoapRequest*) getComponents: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self getComponents: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getComponents: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getComponents" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteComponent alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns RemoteUser*.  */
	- (SoapRequest*) createUser: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (NSString*) in2 in3: (NSString*) in3 in4: (NSString*) in4
	{
		return [self createUser: handler action: nil in0: in0 in1: in1 in2: in2 in3: in3 in4: in4];
	}

	- (SoapRequest*) createUser: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (NSString*) in2 in3: (NSString*) in3 in4: (NSString*) in4
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in3 forName: @"in3"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in4 forName: @"in4"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"createUser" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteUser alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns RemoteIssue*.  */
	- (SoapRequest*) createIssue: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (RemoteIssue*) in1
	{
		return [self createIssue: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) createIssue: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (RemoteIssue*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"createIssue" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteIssue alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns RemoteIssue*.  */
	- (SoapRequest*) updateIssue: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (ArrayOf_tns1_RemoteFieldValue*) in2
	{
		return [self updateIssue: handler action: nil in0: in0 in1: in1 in2: in2];
	}

	- (SoapRequest*) updateIssue: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (ArrayOf_tns1_RemoteFieldValue*) in2
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"updateIssue" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteIssue alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) deleteIssue: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self deleteIssue: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) deleteIssue: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"deleteIssue" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteNamedObject*.  */
	- (SoapRequest*) getAvailableActions: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self getAvailableActions: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getAvailableActions: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getAvailableActions" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteNamedObject alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteIssueType*.  */
	- (SoapRequest*) getSubTaskIssueTypes: (id <SoapDelegate>) handler in0: (NSString*) in0
	{
		return [self getSubTaskIssueTypes: handler action: nil in0: in0];
	}

	- (SoapRequest*) getSubTaskIssueTypes: (id) _target action: (SEL) _action in0: (NSString*) in0
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getSubTaskIssueTypes" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteIssueType alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns RemoteConfiguration*.  */
	- (SoapRequest*) getConfiguration: (id <SoapDelegate>) handler in0: (NSString*) in0
	{
		return [self getConfiguration: handler action: nil in0: in0];
	}

	- (SoapRequest*) getConfiguration: (id) _target action: (SEL) _action in0: (NSString*) in0
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getConfiguration" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteConfiguration alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns RemoteProject*.  */
	- (SoapRequest*) createProject: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (NSString*) in2 in3: (NSString*) in3 in4: (NSString*) in4 in5: (NSString*) in5 in6: (RemotePermissionScheme*) in6 in7: (RemoteScheme*) in7 in8: (RemoteScheme*) in8
	{
		return [self createProject: handler action: nil in0: in0 in1: in1 in2: in2 in3: in3 in4: in4 in5: in5 in6: in6 in7: in7 in8: in8];
	}

	- (SoapRequest*) createProject: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (NSString*) in2 in3: (NSString*) in3 in4: (NSString*) in4 in5: (NSString*) in5 in6: (RemotePermissionScheme*) in6 in7: (RemoteScheme*) in7 in8: (RemoteScheme*) in8
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in3 forName: @"in3"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in4 forName: @"in4"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in5 forName: @"in5"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in6 forName: @"in6"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in7 forName: @"in7"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in8 forName: @"in8"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"createProject" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteProject alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns RemoteProject*.  */
	- (SoapRequest*) updateProject: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (RemoteProject*) in1
	{
		return [self updateProject: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) updateProject: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (RemoteProject*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"updateProject" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteProject alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns RemoteProject*.  */
	- (SoapRequest*) getProjectByKey: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self getProjectByKey: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getProjectByKey: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getProjectByKey" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteProject alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) removeAllRoleActorsByProject: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (RemoteProject*) in1
	{
		return [self removeAllRoleActorsByProject: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) removeAllRoleActorsByProject: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (RemoteProject*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"removeAllRoleActorsByProject" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemotePriority*.  */
	- (SoapRequest*) getPriorities: (id <SoapDelegate>) handler in0: (NSString*) in0
	{
		return [self getPriorities: handler action: nil in0: in0];
	}

	- (SoapRequest*) getPriorities: (id) _target action: (SEL) _action in0: (NSString*) in0
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getPriorities" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemotePriority alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteResolution*.  */
	- (SoapRequest*) getResolutions: (id <SoapDelegate>) handler in0: (NSString*) in0
	{
		return [self getResolutions: handler action: nil in0: in0];
	}

	- (SoapRequest*) getResolutions: (id) _target action: (SEL) _action in0: (NSString*) in0
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getResolutions" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteResolution alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteIssueType*.  */
	- (SoapRequest*) getIssueTypes: (id <SoapDelegate>) handler in0: (NSString*) in0
	{
		return [self getIssueTypes: handler action: nil in0: in0];
	}

	- (SoapRequest*) getIssueTypes: (id) _target action: (SEL) _action in0: (NSString*) in0
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getIssueTypes" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteIssueType alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteStatus*.  */
	- (SoapRequest*) getStatuses: (id <SoapDelegate>) handler in0: (NSString*) in0
	{
		return [self getStatuses: handler action: nil in0: in0];
	}

	- (SoapRequest*) getStatuses: (id) _target action: (SEL) _action in0: (NSString*) in0
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getStatuses" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteStatus alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteIssueType*.  */
	- (SoapRequest*) getIssueTypesForProject: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self getIssueTypesForProject: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getIssueTypesForProject: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getIssueTypesForProject" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteIssueType alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteProjectRole*.  */
	- (SoapRequest*) getProjectRoles: (id <SoapDelegate>) handler in0: (NSString*) in0
	{
		return [self getProjectRoles: handler action: nil in0: in0];
	}

	- (SoapRequest*) getProjectRoles: (id) _target action: (SEL) _action in0: (NSString*) in0
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getProjectRoles" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteProjectRole alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns RemoteProjectRole*.  */
	- (SoapRequest*) getProjectRole: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (long) in1
	{
		return [self getProjectRole: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getProjectRole: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (long) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithLong: in1] forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getProjectRole" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteProjectRole alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns RemoteProjectRoleActors*.  */
	- (SoapRequest*) getProjectRoleActors: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (RemoteProjectRole*) in1 in2: (RemoteProject*) in2
	{
		return [self getProjectRoleActors: handler action: nil in0: in0 in1: in1 in2: in2];
	}

	- (SoapRequest*) getProjectRoleActors: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (RemoteProjectRole*) in1 in2: (RemoteProject*) in2
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getProjectRoleActors" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteProjectRoleActors alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns RemoteRoleActors*.  */
	- (SoapRequest*) getDefaultRoleActors: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (RemoteProjectRole*) in1
	{
		return [self getDefaultRoleActors: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getDefaultRoleActors: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (RemoteProjectRole*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getDefaultRoleActors" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteRoleActors alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) removeAllRoleActorsByNameAndType: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (NSString*) in2
	{
		return [self removeAllRoleActorsByNameAndType: handler action: nil in0: in0 in1: in1 in2: in2];
	}

	- (SoapRequest*) removeAllRoleActorsByNameAndType: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (NSString*) in2
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"removeAllRoleActorsByNameAndType" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) deleteProjectRole: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (RemoteProjectRole*) in1 in2: (BOOL) in2
	{
		return [self deleteProjectRole: handler action: nil in0: in0 in1: in1 in2: in2];
	}

	- (SoapRequest*) deleteProjectRole: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (RemoteProjectRole*) in1 in2: (BOOL) in2
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: in2] forName: @"in2"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"deleteProjectRole" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) updateProjectRole: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (RemoteProjectRole*) in1
	{
		return [self updateProjectRole: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) updateProjectRole: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (RemoteProjectRole*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"updateProjectRole" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns RemoteProjectRole*.  */
	- (SoapRequest*) createProjectRole: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (RemoteProjectRole*) in1
	{
		return [self createProjectRole: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) createProjectRole: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (RemoteProjectRole*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"createProjectRole" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteProjectRole alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns BOOL.  */
	- (SoapRequest*) isProjectRoleNameUnique: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self isProjectRoleNameUnique: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) isProjectRoleNameUnique: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"isProjectRoleNameUnique" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) addActorsToProjectRole: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (ArrayOf_xsd_string*) in1 in2: (RemoteProjectRole*) in2 in3: (RemoteProject*) in3 in4: (NSString*) in4
	{
		return [self addActorsToProjectRole: handler action: nil in0: in0 in1: in1 in2: in2 in3: in3 in4: in4];
	}

	- (SoapRequest*) addActorsToProjectRole: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (ArrayOf_xsd_string*) in1 in2: (RemoteProjectRole*) in2 in3: (RemoteProject*) in3 in4: (NSString*) in4
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in3 forName: @"in3"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in4 forName: @"in4"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"addActorsToProjectRole" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) removeActorsFromProjectRole: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (ArrayOf_xsd_string*) in1 in2: (RemoteProjectRole*) in2 in3: (RemoteProject*) in3 in4: (NSString*) in4
	{
		return [self removeActorsFromProjectRole: handler action: nil in0: in0 in1: in1 in2: in2 in3: in3 in4: in4];
	}

	- (SoapRequest*) removeActorsFromProjectRole: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (ArrayOf_xsd_string*) in1 in2: (RemoteProjectRole*) in2 in3: (RemoteProject*) in3 in4: (NSString*) in4
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in3 forName: @"in3"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in4 forName: @"in4"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"removeActorsFromProjectRole" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) addDefaultActorsToProjectRole: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (ArrayOf_xsd_string*) in1 in2: (RemoteProjectRole*) in2 in3: (NSString*) in3
	{
		return [self addDefaultActorsToProjectRole: handler action: nil in0: in0 in1: in1 in2: in2 in3: in3];
	}

	- (SoapRequest*) addDefaultActorsToProjectRole: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (ArrayOf_xsd_string*) in1 in2: (RemoteProjectRole*) in2 in3: (NSString*) in3
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in3 forName: @"in3"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"addDefaultActorsToProjectRole" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) removeDefaultActorsFromProjectRole: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (ArrayOf_xsd_string*) in1 in2: (RemoteProjectRole*) in2 in3: (NSString*) in3
	{
		return [self removeDefaultActorsFromProjectRole: handler action: nil in0: in0 in1: in1 in2: in2 in3: in3];
	}

	- (SoapRequest*) removeDefaultActorsFromProjectRole: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (ArrayOf_xsd_string*) in1 in2: (RemoteProjectRole*) in2 in3: (NSString*) in3
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in3 forName: @"in3"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"removeDefaultActorsFromProjectRole" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteScheme*.  */
	- (SoapRequest*) getAssociatedNotificationSchemes: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (RemoteProjectRole*) in1
	{
		return [self getAssociatedNotificationSchemes: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getAssociatedNotificationSchemes: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (RemoteProjectRole*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getAssociatedNotificationSchemes" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteScheme alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteScheme*.  */
	- (SoapRequest*) getAssociatedPermissionSchemes: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (RemoteProjectRole*) in1
	{
		return [self getAssociatedPermissionSchemes: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getAssociatedPermissionSchemes: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (RemoteProjectRole*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getAssociatedPermissionSchemes" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteScheme alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) deleteProject: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self deleteProject: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) deleteProject: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"deleteProject" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns RemoteProject*.  */
	- (SoapRequest*) getProjectById: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (long) in1
	{
		return [self getProjectById: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getProjectById: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (long) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithLong: in1] forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getProjectById" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteProject alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteField*.  */
	- (SoapRequest*) getCustomFields: (id <SoapDelegate>) handler in0: (NSString*) in0
	{
		return [self getCustomFields: handler action: nil in0: in0];
	}

	- (SoapRequest*) getCustomFields: (id) _target action: (SEL) _action in0: (NSString*) in0
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getCustomFields" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteField alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteComment*.  */
	- (SoapRequest*) getComments: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self getComments: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getComments: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getComments" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteComment alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteFilter*.  */
	- (SoapRequest*) getFavouriteFilters: (id <SoapDelegate>) handler in0: (NSString*) in0
	{
		return [self getFavouriteFilters: handler action: nil in0: in0];
	}

	- (SoapRequest*) getFavouriteFilters: (id) _target action: (SEL) _action in0: (NSString*) in0
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getFavouriteFilters" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteFilter alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) releaseVersion: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (RemoteVersion*) in2
	{
		return [self releaseVersion: handler action: nil in0: in0 in1: in1 in2: in2];
	}

	- (SoapRequest*) releaseVersion: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (RemoteVersion*) in2
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"releaseVersion" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) archiveVersion: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (NSString*) in2 in3: (BOOL) in3
	{
		return [self archiveVersion: handler action: nil in0: in0 in1: in1 in2: in2 in3: in3];
	}

	- (SoapRequest*) archiveVersion: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (NSString*) in2 in3: (BOOL) in3
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: in3] forName: @"in3"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"archiveVersion" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteField*.  */
	- (SoapRequest*) getFieldsForEdit: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self getFieldsForEdit: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getFieldsForEdit: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getFieldsForEdit" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteField alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteIssueType*.  */
	- (SoapRequest*) getSubTaskIssueTypesForProject: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self getSubTaskIssueTypesForProject: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getSubTaskIssueTypesForProject: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getSubTaskIssueTypesForProject" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteIssueType alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) addUserToGroup: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (RemoteGroup*) in1 in2: (RemoteUser*) in2
	{
		return [self addUserToGroup: handler action: nil in0: in0 in1: in1 in2: in2];
	}

	- (SoapRequest*) addUserToGroup: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (RemoteGroup*) in1 in2: (RemoteUser*) in2
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"addUserToGroup" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) removeUserFromGroup: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (RemoteGroup*) in1 in2: (RemoteUser*) in2
	{
		return [self removeUserFromGroup: handler action: nil in0: in0 in1: in1 in2: in2];
	}

	- (SoapRequest*) removeUserFromGroup: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (RemoteGroup*) in1 in2: (RemoteUser*) in2
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"removeUserFromGroup" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns RemoteSecurityLevel*.  */
	- (SoapRequest*) getSecurityLevel: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self getSecurityLevel: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getSecurityLevel: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getSecurityLevel" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteSecurityLevel alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns BOOL.  */
	- (SoapRequest*) logout: (id <SoapDelegate>) handler in0: (NSString*) in0
	{
		return [self logout: handler action: nil in0: in0];
	}

	- (SoapRequest*) logout: (id) _target action: (SEL) _action in0: (NSString*) in0
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"logout" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) addComment: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (RemoteComment*) in2
	{
		return [self addComment: handler action: nil in0: in0 in1: in1 in2: in2];
	}

	- (SoapRequest*) addComment: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (RemoteComment*) in2
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"addComment" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns RemoteProject*.  */
	- (SoapRequest*) getProjectWithSchemesById: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (long) in1
	{
		return [self getProjectWithSchemesById: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getProjectWithSchemesById: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (long) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithLong: in1] forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getProjectWithSchemesById" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteProject alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteSecurityLevel*.  */
	- (SoapRequest*) getSecurityLevels: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self getSecurityLevels: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getSecurityLevels: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getSecurityLevels" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteSecurityLevel alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteAvatar*.  */
	- (SoapRequest*) getProjectAvatars: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (BOOL) in2
	{
		return [self getProjectAvatars: handler action: nil in0: in0 in1: in1 in2: in2];
	}

	- (SoapRequest*) getProjectAvatars: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (BOOL) in2
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: in2] forName: @"in2"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getProjectAvatars" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteAvatar alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) setProjectAvatar: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (long) in2
	{
		return [self setProjectAvatar: handler action: nil in0: in0 in1: in1 in2: in2];
	}

	- (SoapRequest*) setProjectAvatar: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (long) in2
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithLong: in2] forName: @"in2"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"setProjectAvatar" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns RemoteAvatar*.  */
	- (SoapRequest*) getProjectAvatar: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self getProjectAvatar: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getProjectAvatar: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getProjectAvatar" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteAvatar alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) deleteProjectAvatar: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (long) in1
	{
		return [self deleteProjectAvatar: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) deleteProjectAvatar: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (long) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithLong: in1] forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"deleteProjectAvatar" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteScheme*.  */
	- (SoapRequest*) getNotificationSchemes: (id <SoapDelegate>) handler in0: (NSString*) in0
	{
		return [self getNotificationSchemes: handler action: nil in0: in0];
	}

	- (SoapRequest*) getNotificationSchemes: (id) _target action: (SEL) _action in0: (NSString*) in0
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getNotificationSchemes" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteScheme alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemotePermissionScheme*.  */
	- (SoapRequest*) getPermissionSchemes: (id <SoapDelegate>) handler in0: (NSString*) in0
	{
		return [self getPermissionSchemes: handler action: nil in0: in0];
	}

	- (SoapRequest*) getPermissionSchemes: (id) _target action: (SEL) _action in0: (NSString*) in0
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getPermissionSchemes" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemotePermissionScheme alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemotePermission*.  */
	- (SoapRequest*) getAllPermissions: (id <SoapDelegate>) handler in0: (NSString*) in0
	{
		return [self getAllPermissions: handler action: nil in0: in0];
	}

	- (SoapRequest*) getAllPermissions: (id) _target action: (SEL) _action in0: (NSString*) in0
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getAllPermissions" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemotePermission alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns RemotePermissionScheme*.  */
	- (SoapRequest*) createPermissionScheme: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (NSString*) in2
	{
		return [self createPermissionScheme: handler action: nil in0: in0 in1: in1 in2: in2];
	}

	- (SoapRequest*) createPermissionScheme: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (NSString*) in2
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"createPermissionScheme" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemotePermissionScheme alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns RemotePermissionScheme*.  */
	- (SoapRequest*) addPermissionTo: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (RemotePermissionScheme*) in1 in2: (RemotePermission*) in2 in3: (RemoteEntity*) in3
	{
		return [self addPermissionTo: handler action: nil in0: in0 in1: in1 in2: in2 in3: in3];
	}

	- (SoapRequest*) addPermissionTo: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (RemotePermissionScheme*) in1 in2: (RemotePermission*) in2 in3: (RemoteEntity*) in3
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in3 forName: @"in3"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"addPermissionTo" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemotePermissionScheme alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns RemotePermissionScheme*.  */
	- (SoapRequest*) deletePermissionFrom: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (RemotePermissionScheme*) in1 in2: (RemotePermission*) in2 in3: (RemoteEntity*) in3
	{
		return [self deletePermissionFrom: handler action: nil in0: in0 in1: in1 in2: in2 in3: in3];
	}

	- (SoapRequest*) deletePermissionFrom: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (RemotePermissionScheme*) in1 in2: (RemotePermission*) in2 in3: (RemoteEntity*) in3
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in3 forName: @"in3"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"deletePermissionFrom" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemotePermissionScheme alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) deletePermissionScheme: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self deletePermissionScheme: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) deletePermissionScheme: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"deletePermissionScheme" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns RemoteIssue*.  */
	- (SoapRequest*) createIssueWithSecurityLevel: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (RemoteIssue*) in1 in2: (long) in2
	{
		return [self createIssueWithSecurityLevel: handler action: nil in0: in0 in1: in1 in2: in2];
	}

	- (SoapRequest*) createIssueWithSecurityLevel: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (RemoteIssue*) in1 in2: (long) in2
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithLong: in2] forName: @"in2"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"createIssueWithSecurityLevel" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteIssue alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns BOOL.  */
	- (SoapRequest*) addAttachmentsToIssue: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (ArrayOf_xsd_string*) in2 in3: (ArrayOf_xsd_base64Binary*) in3
	{
		return [self addAttachmentsToIssue: handler action: nil in0: in0 in1: in1 in2: in2 in3: in3];
	}

	- (SoapRequest*) addAttachmentsToIssue: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (ArrayOf_xsd_string*) in2 in3: (ArrayOf_xsd_base64Binary*) in3
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in3 forName: @"in3"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"addAttachmentsToIssue" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteAttachment*.  */
	- (SoapRequest*) getAttachmentsFromIssue: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self getAttachmentsFromIssue: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getAttachmentsFromIssue: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getAttachmentsFromIssue" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteAttachment alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns BOOL.  */
	- (SoapRequest*) hasPermissionToEditComment: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (RemoteComment*) in1
	{
		return [self hasPermissionToEditComment: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) hasPermissionToEditComment: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (RemoteComment*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"hasPermissionToEditComment" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns RemoteComment*.  */
	- (SoapRequest*) editComment: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (RemoteComment*) in1
	{
		return [self editComment: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) editComment: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (RemoteComment*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"editComment" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteComment alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteField*.  */
	- (SoapRequest*) getFieldsForAction: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (NSString*) in2
	{
		return [self getFieldsForAction: handler action: nil in0: in0 in1: in1 in2: in2];
	}

	- (SoapRequest*) getFieldsForAction: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (NSString*) in2
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getFieldsForAction" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteField alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns RemoteIssue*.  */
	- (SoapRequest*) progressWorkflowAction: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (NSString*) in2 in3: (ArrayOf_tns1_RemoteFieldValue*) in3
	{
		return [self progressWorkflowAction: handler action: nil in0: in0 in1: in1 in2: in2 in3: in3];
	}

	- (SoapRequest*) progressWorkflowAction: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (NSString*) in2 in3: (ArrayOf_tns1_RemoteFieldValue*) in3
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in3 forName: @"in3"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"progressWorkflowAction" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteIssue alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns RemoteIssue*.  */
	- (SoapRequest*) getIssueById: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self getIssueById: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getIssueById: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getIssueById" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteIssue alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns RemoteWorklog*.  */
	- (SoapRequest*) addWorklogWithNewRemainingEstimate: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (RemoteWorklog*) in2 in3: (NSString*) in3
	{
		return [self addWorklogWithNewRemainingEstimate: handler action: nil in0: in0 in1: in1 in2: in2 in3: in3];
	}

	- (SoapRequest*) addWorklogWithNewRemainingEstimate: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (RemoteWorklog*) in2 in3: (NSString*) in3
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in3 forName: @"in3"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"addWorklogWithNewRemainingEstimate" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteWorklog alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns RemoteWorklog*.  */
	- (SoapRequest*) addWorklogAndAutoAdjustRemainingEstimate: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (RemoteWorklog*) in2
	{
		return [self addWorklogAndAutoAdjustRemainingEstimate: handler action: nil in0: in0 in1: in1 in2: in2];
	}

	- (SoapRequest*) addWorklogAndAutoAdjustRemainingEstimate: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (RemoteWorklog*) in2
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"addWorklogAndAutoAdjustRemainingEstimate" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteWorklog alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns RemoteWorklog*.  */
	- (SoapRequest*) addWorklogAndRetainRemainingEstimate: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (RemoteWorklog*) in2
	{
		return [self addWorklogAndRetainRemainingEstimate: handler action: nil in0: in0 in1: in1 in2: in2];
	}

	- (SoapRequest*) addWorklogAndRetainRemainingEstimate: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (RemoteWorklog*) in2
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"addWorklogAndRetainRemainingEstimate" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteWorklog alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) deleteWorklogWithNewRemainingEstimate: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (NSString*) in2
	{
		return [self deleteWorklogWithNewRemainingEstimate: handler action: nil in0: in0 in1: in1 in2: in2];
	}

	- (SoapRequest*) deleteWorklogWithNewRemainingEstimate: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (NSString*) in2
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"deleteWorklogWithNewRemainingEstimate" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) deleteWorklogAndAutoAdjustRemainingEstimate: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self deleteWorklogAndAutoAdjustRemainingEstimate: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) deleteWorklogAndAutoAdjustRemainingEstimate: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"deleteWorklogAndAutoAdjustRemainingEstimate" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) deleteWorklogAndRetainRemainingEstimate: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self deleteWorklogAndRetainRemainingEstimate: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) deleteWorklogAndRetainRemainingEstimate: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"deleteWorklogAndRetainRemainingEstimate" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) updateWorklogWithNewRemainingEstimate: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (RemoteWorklog*) in1 in2: (NSString*) in2
	{
		return [self updateWorklogWithNewRemainingEstimate: handler action: nil in0: in0 in1: in1 in2: in2];
	}

	- (SoapRequest*) updateWorklogWithNewRemainingEstimate: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (RemoteWorklog*) in1 in2: (NSString*) in2
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"updateWorklogWithNewRemainingEstimate" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) updateWorklogAndAutoAdjustRemainingEstimate: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (RemoteWorklog*) in1
	{
		return [self updateWorklogAndAutoAdjustRemainingEstimate: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) updateWorklogAndAutoAdjustRemainingEstimate: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (RemoteWorklog*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"updateWorklogAndAutoAdjustRemainingEstimate" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) updateWorklogAndRetainRemainingEstimate: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (RemoteWorklog*) in1
	{
		return [self updateWorklogAndRetainRemainingEstimate: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) updateWorklogAndRetainRemainingEstimate: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (RemoteWorklog*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"updateWorklogAndRetainRemainingEstimate" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteWorklog*.  */
	- (SoapRequest*) getWorklogs: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self getWorklogs: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getWorklogs: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getWorklogs" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteWorklog alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns BOOL.  */
	- (SoapRequest*) hasPermissionToCreateWorklog: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self hasPermissionToCreateWorklog: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) hasPermissionToCreateWorklog: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"hasPermissionToCreateWorklog" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns BOOL.  */
	- (SoapRequest*) hasPermissionToDeleteWorklog: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self hasPermissionToDeleteWorklog: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) hasPermissionToDeleteWorklog: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"hasPermissionToDeleteWorklog" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns BOOL.  */
	- (SoapRequest*) hasPermissionToUpdateWorklog: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self hasPermissionToUpdateWorklog: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) hasPermissionToUpdateWorklog: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"hasPermissionToUpdateWorklog" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns NSDate*.  */
	- (SoapRequest*) getResolutionDateByKey: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self getResolutionDateByKey: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getResolutionDateByKey: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getResolutionDateByKey" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSDate"];
		[_request send];
		return _request;
	}

	/* Returns NSDate*.  */
	- (SoapRequest*) getResolutionDateById: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (long) in1
	{
		return [self getResolutionDateById: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getResolutionDateById: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (long) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithLong: in1] forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getResolutionDateById" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSDate"];
		[_request send];
		return _request;
	}

	/* Returns long.  */
	- (SoapRequest*) getIssueCountForFilter: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self getIssueCountForFilter: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getIssueCountForFilter: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getIssueCountForFilter" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"long"];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteIssue*.  */
	- (SoapRequest*) getIssuesFromTextSearch: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self getIssuesFromTextSearch: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getIssuesFromTextSearch: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getIssuesFromTextSearch" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteIssue alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteIssue*.  */
	- (SoapRequest*) getIssuesFromTextSearchWithProject: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (ArrayOf_xsd_string*) in1 in2: (NSString*) in2 in3: (int) in3
	{
		return [self getIssuesFromTextSearchWithProject: handler action: nil in0: in0 in1: in1 in2: in2 in3: in3];
	}

	- (SoapRequest*) getIssuesFromTextSearchWithProject: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (ArrayOf_xsd_string*) in1 in2: (NSString*) in2 in3: (int) in3
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: in3] forName: @"in3"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getIssuesFromTextSearchWithProject" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteIssue alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteIssue*.  */
	- (SoapRequest*) getIssuesFromJqlSearch: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (int) in2
	{
		return [self getIssuesFromJqlSearch: handler action: nil in0: in0 in1: in1 in2: in2];
	}

	- (SoapRequest*) getIssuesFromJqlSearch: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (int) in2
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: in2] forName: @"in2"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getIssuesFromJqlSearch" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteIssue alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) deleteUser: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self deleteUser: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) deleteUser: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"deleteUser" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns RemoteGroup*.  */
	- (SoapRequest*) updateGroup: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (RemoteGroup*) in1
	{
		return [self updateGroup: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) updateGroup: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (RemoteGroup*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"updateGroup" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteGroup alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) deleteGroup: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (NSString*) in2
	{
		return [self deleteGroup: handler action: nil in0: in0 in1: in1 in2: in2];
	}

	- (SoapRequest*) deleteGroup: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (NSString*) in2
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"deleteGroup" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) refreshCustomFields: (id <SoapDelegate>) handler in0: (NSString*) in0
	{
		return [self refreshCustomFields: handler action: nil in0: in0];
	}

	- (SoapRequest*) refreshCustomFields: (id) _target action: (SEL) _action in0: (NSString*) in0
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"refreshCustomFields" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteFilter*.  */
	- (SoapRequest*) getSavedFilters: (id <SoapDelegate>) handler in0: (NSString*) in0
	{
		return [self getSavedFilters: handler action: nil in0: in0];
	}

	- (SoapRequest*) getSavedFilters: (id) _target action: (SEL) _action in0: (NSString*) in0
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getSavedFilters" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteFilter alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns BOOL.  */
	- (SoapRequest*) addBase64EncodedAttachmentsToIssue: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (ArrayOf_xsd_string*) in2 in3: (ArrayOf_xsd_string*) in3
	{
		return [self addBase64EncodedAttachmentsToIssue: handler action: nil in0: in0 in1: in1 in2: in2 in3: in3];
	}

	- (SoapRequest*) addBase64EncodedAttachmentsToIssue: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (ArrayOf_xsd_string*) in2 in3: (ArrayOf_xsd_string*) in3
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in3 forName: @"in3"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"addBase64EncodedAttachmentsToIssue" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns RemoteProject*.  */
	- (SoapRequest*) createProjectFromObject: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (RemoteProject*) in1
	{
		return [self createProjectFromObject: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) createProjectFromObject: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (RemoteProject*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"createProjectFromObject" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteProject alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteScheme*.  */
	- (SoapRequest*) getSecuritySchemes: (id <SoapDelegate>) handler in0: (NSString*) in0
	{
		return [self getSecuritySchemes: handler action: nil in0: in0];
	}

	- (SoapRequest*) getSecuritySchemes: (id) _target action: (SEL) _action in0: (NSString*) in0
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getSecuritySchemes" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteScheme alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns RemoteVersion*.  */
	- (SoapRequest*) addVersion: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (RemoteVersion*) in2
	{
		return [self addVersion: handler action: nil in0: in0 in1: in1 in2: in2];
	}

	- (SoapRequest*) addVersion: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (RemoteVersion*) in2
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"addVersion" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[RemoteVersion alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteIssue*.  */
	- (SoapRequest*) getIssuesFromFilter: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1
	{
		return [self getIssuesFromFilter: handler action: nil in0: in0 in1: in1];
	}

	- (SoapRequest*) getIssuesFromFilter: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getIssuesFromFilter" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteIssue alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteIssue*.  */
	- (SoapRequest*) getIssuesFromFilterWithLimit: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (int) in2 in3: (int) in3
	{
		return [self getIssuesFromFilterWithLimit: handler action: nil in0: in0 in1: in1 in2: in2 in3: in3];
	}

	- (SoapRequest*) getIssuesFromFilterWithLimit: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (int) in2 in3: (int) in3
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: in2] forName: @"in2"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: in3] forName: @"in3"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getIssuesFromFilterWithLimit" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteIssue alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteIssue*.  */
	- (SoapRequest*) getIssuesFromTextSearchWithLimit: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (int) in2 in3: (int) in3
	{
		return [self getIssuesFromTextSearchWithLimit: handler action: nil in0: in0 in1: in1 in2: in2 in3: in3];
	}

	- (SoapRequest*) getIssuesFromTextSearchWithLimit: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (int) in2 in3: (int) in3
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: in2] forName: @"in2"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: in3] forName: @"in3"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getIssuesFromTextSearchWithLimit" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteIssue alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns ArrayOf_tns1_RemoteProject*.  */
	- (SoapRequest*) getProjectsNoSchemes: (id <SoapDelegate>) handler in0: (NSString*) in0
	{
		return [self getProjectsNoSchemes: handler action: nil in0: in0];
	}

	- (SoapRequest*) getProjectsNoSchemes: (id) _target action: (SEL) _action in0: (NSString*) in0
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getProjectsNoSchemes" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[ArrayOf_tns1_RemoteProject alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) setNewProjectAvatar: (id <SoapDelegate>) handler in0: (NSString*) in0 in1: (NSString*) in1 in2: (NSString*) in2 in3: (NSString*) in3
	{
		return [self setNewProjectAvatar: handler action: nil in0: in0 in1: in1 in2: in2 in3: in3];
	}

	- (SoapRequest*) setNewProjectAvatar: (id) _target action: (SEL) _action in0: (NSString*) in0 in1: (NSString*) in1 in2: (NSString*) in2 in3: (NSString*) in3
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: in0 forName: @"in0"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in1 forName: @"in1"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in2 forName: @"in2"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: in3 forName: @"in3"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"setNewProjectAvatar" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}


@end
	