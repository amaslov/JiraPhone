/*
	RemoteRoleActor.h
	The implementation of properties and methods for the RemoteRoleActor object.
	Generated by SudzC.com
*/
#import "RemoteRoleActor.h"

#import "RemoteProjectRole.h"
#import "ArrayOf_tns1_RemoteUser.h"
@implementation RemoteRoleActor
	@synthesize descriptor = _descriptor;
	@synthesize parameter = _parameter;
	@synthesize projectRole = _projectRole;
	@synthesize type = _type;
	@synthesize users = _users;

	- (id) init
	{
		if(self = [super init])
		{
			self.descriptor = nil;
			self.parameter = nil;
			self.projectRole = nil; // [[RemoteProjectRole alloc] init];
			self.type = nil;
			self.users = nil; // [[ArrayOf_tns1_RemoteUser alloc] init];

		}
		return self;
	}

	+ (RemoteRoleActor*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (RemoteRoleActor*)[[[RemoteRoleActor alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.descriptor = [Soap getNodeValue: node withName: @"descriptor"];
			self.parameter = [Soap getNodeValue: node withName: @"parameter"];
			self.projectRole = [[RemoteProjectRole newWithNode: [Soap getNode: node withName: @"projectRole"]] object];
			self.type = [Soap getNodeValue: node withName: @"type"];
			self.users = [[ArrayOf_tns1_RemoteUser newWithNode: [Soap getNode: node withName: @"users"]] object];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"RemoteRoleActor"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [[NSMutableString alloc] init];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return [s autorelease];
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.descriptor != nil) [s appendFormat: @"<descriptor>%@</descriptor>", [[self.descriptor stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.parameter != nil) [s appendFormat: @"<parameter>%@</parameter>", [[self.parameter stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.projectRole != nil) [s appendString: [self.projectRole serialize: @"projectRole"]];
		if (self.type != nil) [s appendFormat: @"<type>%@</type>", [[self.type stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.users != nil) [s appendString: [self.users serialize: @"users"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[RemoteRoleActor class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.descriptor != nil) { [self.descriptor release]; }
		if(self.parameter != nil) { [self.parameter release]; }
		if(self.projectRole != nil) { [self.projectRole release]; }
		if(self.type != nil) { [self.type release]; }
		if(self.users != nil) { [self.users release]; }
		[super dealloc];
	}

@end
